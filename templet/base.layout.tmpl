{{define "base"}}
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Booking App</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.3/dist/css/datepicker-bs4.min.css"
    />
    <link
      rel="stylesheet"
      type="text/css"
      href="https://unpkg.com/notie/dist/notie.min.css"
    />
    <link
      rel="stylesheet"
      type="text/css"
      href="/static/css/styles.css"
    />

  </head>
  <body>
    <!-- <nav class="navbar navbar-expand-lg bg-body-tertiary"> -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <div class="container-fluid">
        <a class="navbar-brand" href="#">Navbar</a>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNavDropdown"
          aria-controls="navbarNavDropdown"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavDropdown">
          <ul class="navbar-nav">
            <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/"
                >Home</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/about">About</a>
            </li>
            <li class="nav-item dropdown">
              <a
                class="nav-link dropdown-toggle"
                href="#"
                role="button"
                data-bs-toggle="dropdown"
                aria-expanded="false"
              >
                Rooms
              </a>
              <ul class="dropdown-menu">
                <li>
                  <a class="dropdown-item" href="/standard-room"
                    >Standard Room</a
                  >
                </li>
                <li>
                  <a class="dropdown-item" href="/king-suit">King Suit</a>
                </li>
              </ul>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/check-availability">Book Now</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/contact">Contact Us</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
<body>
   {{block "content" .}}
   {{end}}


   <div class="row my-footer">
      <div class="col">Left</div>
      <div class="col">Center</div>
      <div class="col">Right</div>
    </div>
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.min.js"
      integrity="sha384-Rx+T1VzGupg4BHQYs2gCW9It+akI2MM/mndMCy36UVfodzcJcF0GGLxZIzObiEfa"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.3/dist/js/datepicker-full.min.js"></script>
    <script src="https://unpkg.com/notie"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

       {{block "js" .}}
   {{end}}
    <script>
      var attention = Promt();   
      function notify(msg, messageType) {
        notie.alert({
          type: messageType,
          text: msg,
        });
      }
      {{with .CriticalEdit}}
        notify("{{.}}", "error")
      {{end}}

      {{with .InfoEdit}}
        notify("{{.}}", "success")
      {{end}}

      {{with .WarningEdit}}
        notify("{{.}}", "warning")
      {{end}}

      function notifyModal(title, text, icon, buttonText) {
        Swal.fire({
          title: title,
          html: text,
          icon: icon,
          confirmButtonText: buttonText,
        });
      }
      function Promt() {
        const toast = ({
          icon = "success",
          title = "",
          position = "top-end",
        }) => {
          const Toast = Swal.mixin({
            toast: true,
            position: position,
            icon: icon,
            title: title,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
              toast.addEventListener("mouseenter", Swal.stopTimer);
              toast.addEventListener("mouseleave", Swal.resumeTimer);
            },
          });

          Toast.fire();
        };
        const success = ({ title = "", msg = "", footer = "" }) => {
          Swal.fire({
            icon: "success",
            title: title,
            text: msg,
            footer: footer,
          });
        };
        const error = ({ title = "", msg = "", footer = "" }) => {
          Swal.fire({
            icon: "error",
            title: title,
            text: msg,
            footer: footer            
          });
        };
        const custom = async ({ title = "", msg = "", callback, willOpen, preConfirm }) => {
          const { value: results } = await Swal.fire({
            title: title,
            html: msg,
            backdrop: true,
            showCancelButton: true,
            focusConfirm: false,
            willOpen: () =>{
              if(willOpen){
                willOpen()
              }
            },
            preConfirm: () =>{
              if(preConfirm){
                preConfirm()
              }
            },
          });
          if (results){
            console.log(results.dismiss)
            if(results.dismiss !== Swal.DismissReason.cancel){
              if(results.value !== ""){
                callback(results)
              }else{
                callback(false)
              }
            }else{
              callback(false)
            }
          }
        };
        return {
          toast: toast,
          success: success,
          error: error,
          custom: custom,
        };
      }
    </script>
  </body>
</html>
{{end}}